local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25)local v26={};for v42=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v42,v42 + 1 )),v1(v2(v25,1 + (v42% #v25) ,1 + (v42% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function()return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...)local v29=0;local v30;local v31;local v32;local v33;local v34;local v35;local v36;local v37;local v38;local v39;local v40;local v41;while true do if (v29==0) then v30=1;v31=nil;v27=v12(v11(v27,15 -10 ),v7("\16\204","\166\62\226\46\63\63\208"),function(v43)if (v9(v43,2)==79) then local v81=0;while true do if (v81==0) then v31=v8(v11(v43,1,1));return "";end end else local v82=0;local v83;while true do if (v82==0) then v83=v10(v8(v43,45 -29 ));if v31 then local v120=0;local v121;while true do if (v120==1) then return v121;end if (v120==0) then v121=v13(v83,v31);v31=nil;v120=1;end end else return v83;end break;end end end end);v29=1;end if (2==v29) then function v33()local v44=0;local v45;while true do if (v44==0) then v45=v9(v27,v30,v30);v30=v30 + 1 ;v44=1;end if (v44==1) then return v45;end end end v34=nil;function v34()local v46,v47=v9(v27,v30,v30 + 2 );v30=v30 + 2 ;return (v47 * (1022 -(745 + 21))) + v46 ;end v29=3;end if (v29==6) then v40=nil;function v40()local v48=0;local v49;local v50;local v51;local v52;local v53;local v54;while true do if (v48==2) then for v92=1056 -(87 + 968) ,v53 do local v93=0;local v94;local v95;while true do if (v93==0) then v94=v33();v95=nil;v93=1;end if (v93==1) then if (v94==1) then v95=v33()~=(0 -0) ;elseif (v94==(2 + 0)) then v95=v36();elseif (v94==3) then v95=v37();end v54[v92]=v95;break;end end end v52[930 -(214 + 713) ]=v33();for v96=1 + 0 ,v35() do local v97=0;local v98;while true do if (v97==0) then v98=v33();if (v32(v98,1,1)==0) then local v129=0;local v130;local v131;local v132;while true do if (v129==3) then if (v32(v131,3,3)==(1638 -(1523 + 114))) then v132[4]=v54[v132[4]];end v49[v96]=v132;break;end if (v129==1) then v132={v34(),v34(),nil,nil};if (v130==0) then local v136=0;while true do if (v136==0) then v132[3]=v34();v132[4]=v34();break;end end elseif (v130==1) then v132[3]=v35();elseif (v130==(1415 -(447 + 966))) then v132[3]=v35() -(2^16) ;elseif (v130==3) then local v145=0;while true do if (v145==0) then v132[3]=v35() -(2^(893 -(282 + 595))) ;v132[4]=v34();break;end end end v129=2;end if (0==v129) then v130=v32(v98,1 + 1 ,3);v131=v32(v98,4,6);v129=1;end if (v129==2) then if (v32(v131,1,1)==1) then v132[2]=v54[v132[2]];end if (v32(v131,2,2)==1) then v132[8 -5 ]=v54[v132[3]];end v129=3;end end end break;end end end v48=3;end if (v48==1) then v52={v49,v50,nil,v51};v53=v35();v54={};v48=2;end if (3==v48) then for v99=1 + 0 ,v35() do v50[v99-1 ]=v40();end return v52;end if (v48==0) then v49={};v50={};v51={};v48=1;end end end v41=nil;v29=7;end if (v29==4) then function v36()local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (3==v55) then if (v60==0) then if (v59==0) then return v61 * (0 -0) ;else v60=1;v58=0;end elseif (v60==(2666 -(555 + 64))) then return ((v59==0) and (v61 * ((932 -(857 + 74))/0))) or (v61 * NaN) ;end return v16(v61,v60-1023 ) * (v58 + (v59/(2^52))) ;end if (v55==0) then v56=v35();v57=v35();v55=1;end if (v55==1) then v58=1;v59=(v32(v57,1,20) * (2^32)) + v56 ;v55=2;end if (v55==2) then v60=v32(v57,21,31);v61=((v32(v57,32)==1) and  -1) or 1 ;v55=3;end end end v37=nil;function v37(v62)local v63=0;local v64;local v65;while true do if (1==v63) then v64=v11(v27,v30,(v30 + v62) -(569 -(367 + 201)) );v30=v30 + v62 ;v63=2;end if (v63==0) then v64=nil;if  not v62 then local v117=0;while true do if (v117==0) then v62=v35();if (v62==(0 -0)) then return "";end break;end end end v63=1;end if (v63==3) then return v14(v65);end if (v63==2) then v65={};for v101=1, #v64 do v65[v101]=v10(v9(v11(v64,v101,v101)));end v63=3;end end end v29=5;end if (v29==3) then v35=nil;function v35()local v66=0;local v67;local v68;local v69;local v70;while true do if (v66==1) then return (v70 * (43216383 -26439167)) + (v69 * 65536) + (v68 * 256) + v67 ;end if (0==v66) then v67,v68,v69,v70=v9(v27,v30,v30 + 3 );v30=v30 + (7 -3) ;v66=1;end end end v36=nil;v29=4;end if (5==v29) then v38=v35;v39=nil;function v39(...)return {...},v20("#",...);end v29=6;end if (v29==1) then v32=nil;function v32(v71,v72,v73)if v73 then local v84=0;local v85;while true do if (v84==0) then v85=(v71/((1749 -(760 + 987))^(v72-1)))%(2^(((v73-1) -(v72-1)) + 1)) ;return v85-(v85%1) ;end end else local v86=0;local v87;while true do if (v86==0) then v87=2^(v72-1) ;return (((v71%(v87 + v87))>=v87) and (1914 -(1789 + 124))) or 0 ;end end end end v33=nil;v29=2;end if (7==v29) then function v41(v74,v75,v76)local v77=0;local v78;local v79;local v80;while true do if (v77==1) then v80=v74[3];return function(...)local v103=v78;local v104=v79;local v105=v80;local v106=v39;local v107=1;local v108= -1;local v109={};local v110={...};local v111=v20("#",...) -1 ;local v112={};local v113={};for v118=0,v111 do if (v118>=v105) then v109[v118-v105 ]=v110[v118 + (1818 -(1703 + 114)) ];else v113[v118]=v110[v118 + 1 ];end end local v114=(v111-v105) + 1 ;local v115;local v116;while true do local v119=0;while true do if (v119==1) then if (v116<=62) then if (v116<=30) then if (v116<=14) then if (v116<=6) then if (v116<=2) then if (v116<=0) then local v146=0;local v147;local v148;local v149;while true do if (1==v146) then v149=0;for v384=v147,v115[4] do local v385=0;while true do if (v385==0) then v149=v149 + 1 ;v113[v384]=v148[v149];break;end end end break;end if (v146==0) then v147=v115[2];v148={v113[v147](v21(v113,v147 + 1 ,v108))};v146=1;end end elseif (v116>1) then local v150=0;local v151;local v152;local v153;local v154;while true do if (v150==0) then v151=v115[2];v152,v153=v106(v113[v151](v21(v113,v151 + 1 ,v108)));v150=1;end if (2==v150) then for v455=v151,v108 do local v456=0;while true do if (v456==0) then v154=v154 + 1 ;v113[v455]=v152[v154];break;end end end break;end if (1==v150) then v108=(v153 + v151) -1 ;v154=0;v150=2;end end else v113[v115[2]]=v113[v115[3]][v113[v115[4]]];end elseif (v116<=4) then if (v116>3) then v75[v115[3]]=v113[v115[2]];else do return v113[v115[703 -(376 + 325) ]]();end end elseif (v116>(8 -3)) then if (v113[v115[2]]>v113[v115[4]]) then v107=v107 + 1 ;else v107=v107 + v115[3] ;end elseif (v113[v115[2]]>v113[v115[4]]) then v107=v107 + (2 -1) ;else v107=v107 + v115[3] ;end elseif (v116<=10) then if (v116<=8) then if (v116>7) then v113[v115[1 + 1 ]]=v113[v115[3]] + v115[4] ;elseif v113[v115[2]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116>9) then do return;end else v113[v115[4 -2 ]]=v113[v115[3]] -v113[v115[5 -1 ]] ;end elseif (v116<=(26 -(9 + 5))) then if (v116==11) then local v161=0;local v162;local v163;while true do if (v161==0) then v162=v115[2];v163=v113[v162];v161=1;end if (v161==1) then for v457=v162 + 1 ,v108 do v15(v163,v113[v457]);end break;end end else local v164=0;local v165;while true do if (v164==0) then v165=v115[2];v113[v165](v113[v165 + (1066 -(68 + 997)) ]);break;end end end elseif (v116>13) then v113[v115[2]]=v75[v115[3]];else v113[v115[2]]=v113[v115[3]] + v115[4] ;end elseif (v116<=(1292 -(226 + 1044))) then if (v116<=18) then if (v116<=16) then if (v116>15) then do return v113[v115[2]];end elseif (v113[v115[2]]<=v115[4]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116==17) then v113[v115[2]]= #v113[v115[3]];else v76[v115[3]]=v113[v115[2]];end elseif (v116<=20) then if (v116==(395 -(85 + 291))) then v113[v115[2]]=v75[v115[1268 -(243 + 1022) ]];elseif (v115[2]==v113[v115[14 -10 ]]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116>21) then v113[v115[2]]=v113[v115[3]]%v115[4] ;else local v175=0;local v176;local v177;local v178;while true do if (2==v175) then for v458=4 -3 ,v115[4] do local v459=0;local v460;while true do if (1==v459) then if (v460[1]==37) then v178[v458-1 ]={v113,v460[3]};else v178[v458-(118 -(32 + 85)) ]={v75,v460[3]};end v112[ #v112 + 1 ]=v178;break;end if (v459==0) then v107=v107 + 1 ;v460=v103[v107];v459=1;end end end v113[v115[2]]=v41(v176,v177,v76);break;end if (v175==0) then v176=v104[v115[3]];v177=nil;v175=1;end if (v175==1) then v178={};v177=v18({},{[v7("\97\218\16\91\135\26\172","\212\62\133\121\53\227\127")]=function(v461,v462)local v463=v178[v462];return v463[1][v463[2]];end,[v7("\250\157\30\17\37\38\203\166\21\12","\79\165\194\112\116\82")]=function(v464,v465,v466)local v467=0;local v468;while true do if (v467==0) then v468=v178[v465];v468[1][v468[2]]=v466;break;end end end});v175=2;end end end elseif (v116<=26) then if (v116<=24) then if (v116>23) then local v179=v115[2];local v180=v113[v179 + 2 ];local v181=v113[v179] + v180 ;v113[v179]=v181;if (v180>0) then if (v181<=v113[v179 + 1 ]) then local v469=0;while true do if (v469==0) then v107=v115[3];v113[v179 + 3 ]=v181;break;end end end elseif (v181>=v113[v179 + 1 ]) then local v470=0;while true do if (v470==0) then v107=v115[3];v113[v179 + 3 + 0 ]=v181;break;end end end else v113[v115[2]]= not v113[v115[3]];end elseif (v116>(1205 -(1123 + 57))) then v113[v115[2]]=v113[v115[3]] -v113[v115[4]] ;else v113[v115[2]]=v115[3]~=0 ;end elseif (v116<=(23 + 5)) then if (v116==27) then local v186=0;local v187;local v188;while true do if (v186==1) then v113[v187 + 1 ]=v188;v113[v187]=v188[v115[258 -(163 + 91) ]];break;end if (v186==0) then v187=v115[2];v188=v113[v115[3]];v186=1;end end elseif (v113[v115[2]]<=v115[4]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116==29) then local v189=0;local v190;while true do if (v189==0) then v190=v115[2 + 0 ];v113[v190](v113[v190 + 1 ]);break;end end elseif (v113[v115[1932 -(1869 + 61) ]]==v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[1 + 2 ];end elseif (v116<=46) then if (v116<=38) then if (v116<=34) then if (v116<=32) then if (v116==31) then v113[v115[959 -(892 + 65) ]]=v115[3];else for v355=v115[4 -2 ],v115[3] do v113[v355]=nil;end end elseif (v116==33) then if (v113[v115[2]]==v115[4]) then v107=v107 + (1 -0) ;else v107=v115[10 -7 ];end else v113[v115[2 -0 ]]=v41(v104[v115[3]],nil,v76);end elseif (v116<=36) then if (v116>35) then v76[v115[4 -1 ]]=v113[v115[2]];else v113[v115[2]]=v76[v115[3]];end elseif (v116>37) then local v198=0;local v199;while true do if (v198==0) then v199=v115[2];do return v113[v199](v21(v113,v199 + 1 ,v115[3]));end break;end end else v113[v115[2]]=v113[v115[3]];end elseif (v116<=(6 + 36)) then if (v116<=40) then if (v116==39) then local v202=0;local v203;local v204;local v205;local v206;while true do if (v202==0) then v203=v115[2];v204,v205=v106(v113[v203](v113[v203 + 1 ]));v202=1;end if (v202==2) then for v471=v203,v108 do v206=v206 + 1 ;v113[v471]=v204[v206];end break;end if (v202==1) then v108=(v205 + v203) -1 ;v206=0;v202=2;end end else local v207=0;local v208;local v209;local v210;while true do if (v207==1) then v210=v113[v208 + 2 ];if (v210>0) then if (v209>v113[v208 + 1 ]) then v107=v115[3];else v113[v208 + (353 -(87 + 263)) ]=v209;end elseif (v209<v113[v208 + 1 ]) then v107=v115[183 -(67 + 113) ];else v113[v208 + 3 ]=v209;end break;end if (v207==0) then v208=v115[2];v209=v113[v208];v207=1;end end end elseif (v116==(56 -15)) then local v211=v115[2];v113[v211]=v113[v211]();elseif  not v113[v115[2 + 0 ]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=44) then if (v116>43) then v113[v115[2]]=v76[v115[3]];else local v215=0;local v216;while true do if (v215==0) then v216=v115[2];do return v113[v216](v21(v113,v216 + 1 ,v115[3]));end break;end end end elseif (v116>45) then local v217=0;local v218;while true do if (v217==0) then v218=v115[2];v113[v218]=v113[v218](v21(v113,v218 + 1 + 0 ,v108));break;end end else v113[v115[2]]= -v113[v115[3]];end elseif (v116<=54) then if (v116<=50) then if (v116<=48) then if (v116==47) then local v220=0;local v221;local v222;local v223;while true do if (v220==1) then v223=0 + 0 ;for v474=v221,v115[4] do local v475=0;while true do if (0==v475) then v223=v223 + 1 ;v113[v474]=v222[v223];break;end end end break;end if (v220==0) then v221=v115[2];v222={v113[v221](v113[v221 + (2 -1) ])};v220=1;end end elseif (v115[1476 -(1329 + 145) ]<v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116==49) then v113[v115[2]]=v113[v115[3]] + v113[v115[4]] ;else v113[v115[2]][v115[11 -8 ]]=v115[4];end elseif (v116<=52) then if (v116>(1003 -(802 + 150))) then v113[v115[5 -3 ]][v113[v115[5 -2 ]]]=v113[v115[3 + 1 ]];else local v229=v115[2];local v230=v113[v229 + 2 ];local v231=v113[v229] + v230 ;v113[v229]=v231;if (v230>0) then if (v231<=v113[v229 + (998 -(915 + 82)) ]) then local v476=0;while true do if (v476==0) then v107=v115[3];v113[v229 + 3 ]=v231;break;end end end elseif (v231>=v113[v229 + 1 ]) then local v477=0;while true do if (v477==0) then v107=v115[974 -(140 + 831) ];v113[v229 + 3 ]=v231;break;end end end end elseif (v116==53) then v113[v115[2]]= -v113[v115[3]];else local v234=v115[2];do return v21(v113,v234,v108);end end elseif (v116<=58) then if (v116<=56) then if (v116==55) then v113[v115[2]][v113[v115[3]]]=v115[11 -7 ];elseif (v115[2]<v113[v115[3 + 1 ]]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116>(74 -17)) then do return;end else local v237=0;local v238;local v239;local v240;local v241;while true do if (1==v237) then v108=(v240 + v238) -1 ;v241=0 + 0 ;v237=2;end if (v237==2) then for v478=v238,v108 do local v479=0;while true do if (0==v479) then v241=v241 + 1 ;v113[v478]=v239[v241];break;end end end break;end if (v237==0) then v238=v115[720 -(15 + 703) ];v239,v240=v106(v113[v238](v21(v113,v238 + (1188 -(1069 + 118)) ,v115[3])));v237=1;end end end elseif (v116<=60) then if (v116==59) then v113[v115[2]]= #v113[v115[3]];else local v243=0;local v244;while true do if (v243==0) then v244=v115[440 -(262 + 176) ];v113[v244](v21(v113,v244 + 1 ,v115[3]));break;end end end elseif (v116==61) then local v245=v104[v115[6 -3 ]];local v246;local v247={};v246=v18({},{[v7("\145\197\7\55\172\73\206","\182\206\154\110\89\200\44")]=function(v357,v358)local v359=0;local v360;while true do if (v359==0) then v360=v247[v358];return v360[1 -0 ][v360[2]];end end end,[v7("\221\133\67\174\212\201\236\190\72\179","\160\130\218\45\203\163")]=function(v361,v362,v363)local v364=0;local v365;while true do if (v364==0) then v365=v247[v362];v365[1][v365[2]]=v363;break;end end end});for v366=1,v115[4] do local v367=0;local v368;while true do if (v367==1) then if (v368[1]==37) then v247[v366-1 ]={v113,v368[3]};else v247[v366-(1 + 0) ]={v75,v368[3]};end v112[ #v112 + 1 ]=v247;break;end if (0==v367) then v107=v107 + 1 ;v368=v103[v107];v367=1;end end end v113[v115[2]]=v41(v245,v246,v76);else local v249=0;local v250;local v251;local v252;local v253;while true do if (0==v249) then v250=v115[2];v251,v252=v106(v113[v250](v113[v250 + 1 ]));v249=1;end if (v249==1) then v108=(v252 + v250) -1 ;v253=0;v249=2;end if (v249==2) then for v485=v250,v108 do v253=v253 + (1 -0) ;v113[v485]=v251[v253];end break;end end end elseif (v116<=94) then if (v116<=78) then if (v116<=70) then if (v116<=66) then if (v116<=64) then if (v116>(63 + 0)) then v113[v115[2]][v113[v115[3]]]=v113[v115[4]];elseif  not v113[v115[793 -(368 + 423) ]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116==65) then v113[v115[6 -4 ]]=v113[v115[3]][v115[4]];else local v258=v115[2];local v259={};for v369=1, #v112 do local v370=0;local v371;while true do if (v370==0) then v371=v112[v369];for v504=0, #v371 do local v505=0;local v506;local v507;local v508;while true do if (v505==1) then v508=v506[2];if ((v507==v113) and (v508>=v258)) then local v552=0;while true do if (v552==0) then v259[v508]=v507[v508];v506[19 -(10 + 8) ]=v259;break;end end end break;end if (v505==0) then v506=v371[v504];v507=v506[1];v505=1;end end end break;end end end end elseif (v116<=(261 -193)) then if (v116>67) then v113[v115[4 -2 ]]={};elseif (v113[v115[444 -(416 + 26) ]]~=v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116==69) then if (v113[v115[2]]==v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end else local v261=v115[2];do return v21(v113,v261,v108);end end elseif (v116<=74) then if (v116<=72) then if (v116>71) then local v262=0;local v263;local v264;while true do if (v262==0) then v263=v115[1208 -(696 + 510) ];v264={};v262=1;end if (v262==1) then for v489=1, #v112 do local v490=0;local v491;while true do if (v490==0) then v491=v112[v489];for v545=0, #v491 do local v546=0;local v547;local v548;local v549;while true do if (v546==0) then v547=v491[v545];v548=v547[1];v546=1;end if (v546==1) then v549=v547[6 -4 ];if ((v548==v113) and (v549>=v263)) then local v559=0;while true do if (v559==0) then v264[v549]=v548[v549];v547[1 -0 ]=v264;break;end end end break;end end end break;end end end break;end end else v107=v115[3];end elseif (v116==73) then local v266=0;local v267;while true do if (v266==0) then v267=v115[1 + 1 ];v113[v267](v21(v113,v267 + 1 ,v115[3]));break;end end else v113[v115[2]][v113[v115[3]]]=v115[4];end elseif (v116<=76) then if (v116==75) then v113[v115[2]]=v113[v115[3]];elseif v113[v115[1264 -(1091 + 171) ]] then v107=v107 + 1 ;else v107=v115[3];end elseif (v116==(136 -59)) then local v272=0;local v273;while true do if (v272==0) then v273=v115[2];v113[v273](v21(v113,v273 + 1 + 0 ,v108));break;end end else v113[v115[2]]=v41(v104[v115[3]],nil,v76);end elseif (v116<=86) then if (v116<=(257 -175)) then if (v116<=80) then if (v116==79) then v113[v115[2]]={};else local v276=0;local v277;while true do if (v276==0) then v277=v115[2];v113[v277]=v113[v277](v21(v113,v277 + (439 -(145 + 293)) ,v115[3]));break;end end end elseif (v116==(511 -(44 + 386))) then v113[v115[2]]();else local v278=0;local v279;while true do if (v278==0) then v279=v115[376 -(123 + 251) ];v113[v279]=v113[v279](v21(v113,v279 + 1 ,v108));break;end end end elseif (v116<=84) then if (v116==83) then v113[v115[1488 -(998 + 488) ]]=v113[v115[1 + 2 ]]/v113[v115[4]] ;elseif (v113[v115[2]]~=v113[v115[4]]) then v107=v107 + 1 + 0 ;else v107=v115[14 -11 ];end elseif (v116==85) then v113[v115[2]]=v115[3] + v113[v115[4]] ;else v113[v115[2]]=v113[v115[701 -(208 + 490) ]]%v115[4] ;end elseif (v116<=90) then if (v116<=88) then if (v116==(8 + 79)) then local v283=0;local v284;local v285;local v286;local v287;while true do if (v283==1) then v108=(v286 + v284) -1 ;v287=0;v283=2;end if (v283==0) then v284=v115[2];v285,v286=v106(v113[v284](v21(v113,v284 + 1 + 0 ,v108)));v283=1;end if (v283==2) then for v492=v284,v108 do v287=v287 + 1 ;v113[v492]=v285[v287];end break;end end else local v288=0;local v289;while true do if (v288==0) then v289=v115[2];v113[v289]=v113[v289]();break;end end end elseif (v116==89) then v113[v115[774 -(201 + 571) ]]= not v113[v115[3]];else v113[v115[2]][v115[3]]=v113[v115[1142 -(116 + 1022) ]];end elseif (v116<=(12 + 80)) then if (v116>91) then if (v113[v115[2]]<=v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end else local v293=v115[2];v113[v293](v21(v113,v293 + 1 ,v108));end elseif (v116==93) then v113[v115[2]][v115[3]]=v115[4];else local v296=0;local v297;while true do if (0==v296) then v297=v115[2];do return v21(v113,v297,v297 + v115[12 -9 ] );end break;end end end elseif (v116<=110) then if (v116<=102) then if (v116<=98) then if (v116<=(298 -(14 + 188))) then if (v116==95) then v113[v115[2]]=v113[v115[3]]%v113[v115[4]] ;else v113[v115[677 -(534 + 141) ]]=v115[3];end elseif (v116==97) then if (v113[v115[2]]<=v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end else local v301=v115[2];v113[v301]=v113[v301](v113[v301 + 1 ]);end elseif (v116<=100) then if (v116>99) then local v303=v115[2];local v304=v115[4];local v305=v303 + 2 ;local v306={v113[v303](v113[v303 + 1 ],v113[v305])};for v372=1,v304 do v113[v305 + v372 ]=v306[v372];end local v307=v306[1];if v307 then v113[v305]=v307;v107=v115[3];else v107=v107 + 1 + 0 ;end else local v308=0;local v309;local v310;while true do if (v308==1) then for v495=v309 + 1 ,v108 do v15(v310,v113[v495]);end break;end if (0==v308) then v309=v115[2 + 0 ];v310=v113[v309];v308=1;end end end elseif (v116>101) then local v311=v115[2];v113[v311]=v113[v311](v113[v311 + 1 ]);else v113[v115[2]]=v113[v115[3]]/v113[v115[4]] ;end elseif (v116<=(386 -280)) then if (v116<=104) then if (v116==103) then v113[v115[2]]();elseif (v115[2 + 0 ]==v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116==(101 + 4)) then for v375=v115[2],v115[3] do v113[v375]=nil;end elseif (v113[v115[2]]==v115[4]) then v107=v107 + 1 ;else v107=v115[3];end elseif (v116<=108) then if (v116==(379 -272)) then v113[v115[2]]=v115[6 -3 ]~=0 ;else local v315=0;local v316;local v317;local v318;local v319;while true do if (v315==0) then v316=v115[2];v317,v318=v106(v113[v316](v21(v113,v316 + 1 ,v115[3])));v315=1;end if (v315==2) then for v496=v316,v108 do local v497=0;while true do if (v497==0) then v319=v319 + 1 ;v113[v496]=v317[v319];break;end end end break;end if (v315==1) then v108=(v318 + v316) -(1 -0) ;v319=0;v315=2;end end end elseif (v116==109) then v113[v115[2]]=v113[v115[3]]%v113[v115[4]] ;else do return v113[v115[2]]();end end elseif (v116<=(330 -212)) then if (v116<=114) then if (v116<=112) then if (v116>111) then local v321=v115[2 + 0 ];local v322={v113[v321](v113[v321 + 1 ])};local v323=0;for v377=v321,v115[3 + 1 ] do local v378=0;while true do if (v378==0) then v323=v323 + 1 ;v113[v377]=v322[v323];break;end end end else v113[v115[398 -(115 + 281) ]][v115[3]]=v113[v115[4]];end elseif (v116==(972 -(814 + 45))) then local v326=v115[2];local v327=v115[4];local v328=v326 + 2 ;local v329={v113[v326](v113[v326 + 1 ],v113[v328])};for v379=1,v327 do v113[v328 + v379 ]=v329[v379];end local v330=v329[1];if v330 then local v406=0;while true do if (v406==0) then v113[v328]=v330;v107=v115[7 -4 ];break;end end else v107=v107 + 1 ;end else local v331=v115[1 + 1 ];local v332={v113[v331](v21(v113,v331 + 1 ,v108))};local v333=0 + 0 ;for v382=v331,v115[889 -(261 + 624) ] do local v383=0;while true do if (v383==0) then v333=v333 + 1 ;v113[v382]=v332[v333];break;end end end end elseif (v116<=116) then if (v116>115) then v113[v115[3 -1 ]]=v113[v115[3]] + v113[v115[4]] ;else v113[v115[4 -2 ]]=v113[v115[10 -7 ]][v115[4]];end elseif (v116==(984 -(550 + 317))) then local v337=0;local v338;local v339;while true do if (1==v337) then v113[v338 + 1 ]=v339;v113[v338]=v339[v115[4]];break;end if (v337==0) then v338=v115[1082 -(1020 + 60) ];v339=v113[v115[3]];v337=1;end end else local v340=0;local v341;local v342;local v343;while true do if (v340==0) then v341=v115[2];v342=v113[v341];v340=1;end if (v340==1) then v343=v113[v341 + 2 ];if (v343>(0 -0)) then if (v342>v113[v341 + 1 ]) then v107=v115[3];else v113[v341 + (3 -0) ]=v342;end elseif (v342<v113[v341 + 1 ]) then v107=v115[1426 -(630 + 793) ];else v113[v341 + 3 ]=v342;end break;end end end elseif (v116<=(413 -291)) then if (v116<=120) then if (v116>119) then v107=v115[3];else v113[v115[5 -3 ]]=v113[v115[3]][v113[v115[18 -14 ]]];end elseif (v116==121) then local v347=v115[2];v113[v347]=v113[v347](v21(v113,v347 + 1 ,v115[2 + 1 ]));else v75[v115[3]]=v113[v115[2]];end elseif (v116<=124) then if (v116>123) then if (v115[2]<=v113[v115[4]]) then v107=v107 + 1 ;else v107=v115[3];end else do return v113[v115[2]];end end elseif (v116==125) then if (v115[2]<=v113[v115[13 -9 ]]) then v107=v107 + (286 -(134 + 151)) ;else v107=v115[3];end else v113[v115[2]]=v115[1668 -(970 + 695) ] + v113[v115[4]] ;end v107=v107 + 1 ;break;end if (v119==0) then v115=v103[v107];v116=v115[1];v119=1;end end end end;end if (0==v77) then v78=v74[1];v79=v74[2];v77=1;end end end return v41(v40(),{},v28)(...);end end end v23("LOL!",v17(),...);
